{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\KME\\\\\\uAC1C\\uBC1C\\uBAA8\\uC544\\uC870\\\\recoder\\\\front\\\\components\\\\LectureBoardList.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Avatar, Card, Button, Input, Form, Popover, Typography, PageHeader } from 'antd';\nimport Link from 'next/link';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logoutRequestAction } from '../reducers/user';\nimport { useInput } from '../pages/signup';\nimport propTypes from 'prop-types'; // import { setContext } from 'redux-saga/effects';\n// { LectureboardList }\n\nvar LectureboardList = function LectureboardList() {\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      mainUsers = _useSelector.mainUsers,\n      Followings = _useSelector.Followings,\n      Followers = _useSelector.Followers;\n\n  var dispatch = useDispatch();\n  var onLogout = useCallback(function () {\n    dispatch(logoutRequestAction);\n  }, []);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setNameState = _useState2[1];\n\n  var Title = Typography.Title; // const { user } = useSelector(state => state.user);\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisibleState = _useState4[1];\n\n  var onHideVisible = useCallback(function (e) {\n    setVisibleState(false);\n  }, []);\n  var onSaveVisible = useCallback(function (e) {\n    e.preventDefault(); // dispatch(portfolioAddAction({\n    //     id, \n    //     password, \n    //     name,\n    //     major,\n    // }))\n\n    setVisibleState(false);\n  });\n  var onChangeVisible = useCallback(function (e) {\n    setVisibleState(!e.target.value);\n  }, []); // useEffect(() => {\n  //     setNameState('');\n  // }, [networkBoardAdded==true]);\n  // const onSubmitBoard = useCallback((e) => {\n  //     e.preventDefault();\n  //     dispatch({\n  //         type: ADD_NETWORK_BOARD_REQUEST,\n  //         data: {\n  //             networkId: networklayout.id,\n  //         }\n  //     })\n  // }, []);\n\n  var onChangeName = useCallback(function (e) {\n    setNameState(e.target.value);\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(PageHeader, {\n    ghost: false,\n    onBack: function onBack() {\n      return window.history.back();\n    },\n    title: \"#\\uCE58\\uC640\\uC640\",\n    subTitle: \"\\uC791\\uACE0 \\uADC0\\uC5EC\\uC6B4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Card, {\n    title: \"Channels\",\n    extra: React.createElement(Popover, {\n      content: React.createElement(React.Fragment, null, React.createElement(Form, {\n        style: {\n          padding: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"name\",\n        value: name,\n        required: true,\n        onChange: onChangeName,\n        placeholder: \"\\uCC44\\uB110 \\uC774\\uB984\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: onHideVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"\\uCDE8\\uC18C\")), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        onClick: onChangeVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"\\uC800\\uC7A5\"))),\n      title: \"\\uCC44\\uB110 \\uCD94\\uAC00\",\n      trigger: \"click\",\n      visible: visible,\n      overlayStyle: {\n        background: \"rgba(0,0,0,1)\",\n        height: \"20vh\",\n        width: \"50vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: onChangeVisible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"+\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Link, {\n    href: \"/networkboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"#\\uACE0\\uBBFC \\uD138\\uC5B4\\uB193\\uC544\\uC694\"))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Link, {\n    href: \"/networkboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"#\\uC0AC\\uB8CC \\uACF5\\uC720\")))));\n}; // LectureboardList.propTypes = {\n//     lectureboard: propTypes.shape({\n//         // Users: propTypes.object,\n//         name: propTypes.string,\n//         password: propTypes.string,\n//         limit: propTypes.string,\n//         notice: propTypes.string,\n//         content: propTypes.string,\n//         createdAt: propTypes.object,\n//     }),\n// }\n\n\nexport default LectureboardList;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\KME\\개발모아조\\recoder\\front\\components\\LectureBoardList.js"],"names":["React","useCallback","useEffect","useState","Avatar","Card","Button","Input","Form","Popover","Typography","PageHeader","Link","useSelector","useDispatch","logoutRequestAction","useInput","propTypes","LectureboardList","state","user","mainUsers","Followings","Followers","dispatch","onLogout","name","setNameState","Title","visible","setVisibleState","onHideVisible","e","onSaveVisible","preventDefault","onChangeVisible","target","value","onChangeName","window","history","back","padding","background","height","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Avatar, Card, Button, Input, Form, Popover, Typography, PageHeader } from 'antd';\r\nimport Link from 'next/link';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logoutRequestAction } from '../reducers/user';\r\nimport { useInput } from '../pages/signup';\r\nimport propTypes from 'prop-types';\r\n// import { setContext } from 'redux-saga/effects';\r\n// { LectureboardList }\r\nconst LectureboardList = () => {\r\n    const { mainUsers, Followings, Followers } = useSelector(state => state.user);\r\n    \r\n    const dispatch = useDispatch();\r\n    const onLogout = useCallback(() => {\r\n        dispatch(logoutRequestAction);\r\n    }, []);\r\n\r\n    const [name, setNameState] = useState('');\r\n    const { Title } = Typography;\r\n\r\n    // const { user } = useSelector(state => state.user);\r\n\r\n    const [visible, setVisibleState] = useState(false);\r\n\r\n    const onHideVisible = useCallback((e) => {\r\n        setVisibleState(false);\r\n    }, []);\r\n\r\n    const onSaveVisible = useCallback((e) => {\r\n        e.preventDefault();\r\n\r\n        // dispatch(portfolioAddAction({\r\n        //     id, \r\n        //     password, \r\n        //     name,\r\n        //     major,\r\n\r\n        // }))\r\n        setVisibleState(\r\n            false\r\n        )\r\n    });\r\n\r\n    const onChangeVisible = useCallback((e) => {\r\n        setVisibleState(!e.target.value);\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     setNameState('');\r\n    // }, [networkBoardAdded==true]);\r\n    // const onSubmitBoard = useCallback((e) => {\r\n    //     e.preventDefault();\r\n    //     dispatch({\r\n    //         type: ADD_NETWORK_BOARD_REQUEST,\r\n    //         data: {\r\n    //             networkId: networklayout.id,\r\n\r\n    //         }\r\n    //     })\r\n    // }, []);\r\n    const onChangeName = useCallback((e) => {\r\n        setNameState(e.target.value);\r\n    },[]);\r\n\r\n    return (\r\n        <>\r\n            <PageHeader\r\n                ghost={false}\r\n                onBack={() => window.history.back()}\r\n                title=\"#치와와\"\r\n                subTitle=\"작고 귀여운\" />\r\n\r\n\r\n            <Card title=\"Channels\" extra={<Popover\r\n                content={<>\r\n                {/* onSubmit={onSubmitBoard} */}\r\n                    <Form  style={{ padding: 15 }}>\r\n                        <div>\r\n                            <label htmlFor=\"name\">Name</label>\r\n                            <br />\r\n                            <Input name=\"name\" value={name} required onChange={onChangeName} placeholder=\"채널 이름\" />\r\n                        </div>\r\n                        <Button type=\"dashed\"><a onClick={onHideVisible}>취소</a></Button>\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={onChangeVisible} >저장</Button>\r\n                        {/* loading={isAddingNetworkBoard} */}\r\n\r\n                    </Form>\r\n\r\n                </>}\r\n\r\n                title=\"채널 추가\"\r\n                trigger=\"click\"\r\n                visible={visible}\r\n                overlayStyle={{\r\n                    background: \"rgba(0,0,0,1)\",\r\n                    height: \"20vh\",\r\n                    width: \"50vw\",\r\n                }}\r\n            >\r\n                <Button type=\"primary\" onClick={onChangeVisible}>+</Button>\r\n            </Popover>}\r\n            >\r\n                 <p><Link href=\"/networkboard\"><a>#고민 털어놓아요</a></Link></p>\r\n                 <p><Link href=\"/networkboard\"><a>#사료 공유</a></Link></p>\r\n                {/* {.map((v) => {\r\n                    return (\r\n                        <p><Link href=\"/networkboard\"><a>{v.name}</a></Link></p>\r\n                    )\r\n                })} */}\r\n\r\n                {/* <p><Link href=\"/networkboard\"><a>#우리 만나요</a></Link></p>\r\n            <p><Link href=\"/networkboard\"><a>#스터디</a></Link></p> */}\r\n\r\n            </Card>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n// LectureboardList.propTypes = {\r\n//     lectureboard: propTypes.shape({\r\n//         // Users: propTypes.object,\r\n//         name: propTypes.string,\r\n//         password: propTypes.string,\r\n//         limit: propTypes.string,\r\n//         notice: propTypes.string,\r\n//         content: propTypes.string,\r\n//         createdAt: propTypes.object,\r\n//     }),\r\n// }\r\n\r\nexport default LectureboardList;"]},"metadata":{},"sourceType":"module"}